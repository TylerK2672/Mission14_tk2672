{"ast":null,"code":"var _jsxFileName = \"/Users/andrewgraviet/Desktop/413/mission13_agraviet/frontend/src/components/MovieList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MovieCard from '../components/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieList() {\n  _s();\n  const [allMovies, setAllMovies] = useState([]);\n  const fetchMovies = async () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: allMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        Category: movie.Category,\n        Title: movie.Title,\n        Year: Number(movie.Year),\n        Director: movie.Director,\n        Rating: movie.Rating,\n        Edited: movie.Edited\n        // LentTo={movie.LentTo}\n        // Notes={movie.Notes}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"0OCe68cQavua7RceyczB577Mma8=\");\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","MovieCard","jsxDEV","_jsxDEV","MovieList","_s","allMovies","setAllMovies","fetchMovies","className","children","map","movie","Category","Title","Year","Number","Director","Rating","Edited","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewgraviet/Desktop/413/mission13_agraviet/frontend/src/components/MovieList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport MovieCard from '../components/MovieCard';\nimport { Movie } from '../types/Movie';\n\nexport default function MovieList() {\n  const [allMovies, setAllMovies] = useState<Movie[]>([]);\n\n  const fetchMovies = async () => {\n    \n  }\n  return (\n    <div className=\"mx-auto container\">\n      <div className=\"grid grid-cols-3 gap-4\">\n        {allMovies.map((movie) => (\n          <MovieCard\n            Category={movie.Category}\n            Title={movie.Title}\n            Year={Number(movie.Year)}\n            Director={movie.Director}\n            Rating={movie.Rating}\n            Edited={movie.Edited}\n            // LentTo={movie.LentTo}\n            // Notes={movie.Notes}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAU,EAAE,CAAC;EAEvD,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY,CAEhC,CAAC;EACD,oBACEL,OAAA;IAAKM,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCP,OAAA;MAAKM,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCJ,SAAS,CAACK,GAAG,CAAEC,KAAK,iBACnBT,OAAA,CAACF,SAAS;QACRY,QAAQ,EAAED,KAAK,CAACC,QAAS;QACzBC,KAAK,EAAEF,KAAK,CAACE,KAAM;QACnBC,IAAI,EAAEC,MAAM,CAACJ,KAAK,CAACG,IAAI,CAAE;QACzBE,QAAQ,EAAEL,KAAK,CAACK,QAAS;QACzBC,MAAM,EAAEN,KAAK,CAACM,MAAO;QACrBC,MAAM,EAAEP,KAAK,CAACO;QACd;QACA;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAClB,EAAA,CAxBuBD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}